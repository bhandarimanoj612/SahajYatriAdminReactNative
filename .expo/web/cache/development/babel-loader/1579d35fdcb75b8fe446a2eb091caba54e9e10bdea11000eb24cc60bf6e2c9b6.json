{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { NativeWindStyleSheet as _NativeWindStyleSheet } from \"nativewind\";\nimport { StyledComponent as _StyledComponent } from \"nativewind\";\nimport React, { useEffect, useState } from \"react\";\nimport { HubConnectionBuilder } from \"@microsoft/signalr\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { ChevronDoubleLeftIcon } from \"react-native-heroicons/outline\";\nimport { widthPercentageToDP as wp } from \"react-native-responsive-screen\";\nimport { Chat_Url } from \"../../utils/config\";\nimport KeyboardAvodingContainer from \"../../../components/KeyboardAvodingContainer\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar GroupPage = function GroupPage(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    connection = _useState2[0],\n    setConnection = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    message = _useState4[0],\n    setMessage = _useState4[1];\n  var _useState5 = useState([]),\n    _useState6 = _slicedToArray(_useState5, 2),\n    receivedMessages = _useState6[0],\n    setReceivedMessages = _useState6[1];\n  useEffect(function () {\n    var newConnection = new HubConnectionBuilder().withUrl(`${Chat_Url}`).withAutomaticReconnect().build();\n    setConnection(newConnection);\n  }, []);\n  useEffect(function () {\n    if (connection) {\n      connection.start().then(function () {\n        return console.log(\"SignalR Connected\");\n      }).catch(function (err) {\n        return console.log(\"SignalR Connection Error: \", err);\n      });\n      connection.on(\"ReceivedMessage\", function (receivedMessage) {\n        console.log(\"Received message:\", receivedMessage);\n        setReceivedMessages(function (prevMessages) {\n          return [].concat(_toConsumableArray(prevMessages), [receivedMessage]);\n        });\n      });\n    }\n  }, [connection]);\n  var sendMessage = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      if (message.trim() !== \"\") {\n        try {\n          yield connection.send(\"SendMessage\", message);\n          setMessage(\"\");\n        } catch (err) {\n          console.log(\"Error sending message: \", err);\n        }\n      }\n    });\n    return function sendMessage() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(_StyledComponent, {\n    style: styles.container,\n    className: \"dark:bg-neutral-800 \",\n    component: KeyboardAvodingContainer,\n    children: [_jsx(_StyledComponent, {\n      className: \"bg-gray-200 rounded-2xl\",\n      onPress: function onPress() {\n        return navigation.goBack();\n      },\n      style: {\n        padding: 20,\n        width: 350,\n        marginBottom: 15\n      },\n      component: TouchableOpacity,\n      children: _jsxs(View, {\n        style: {\n          flexDirection: \"row\",\n          alignItems: \"center\"\n        },\n        children: [_jsx(ChevronDoubleLeftIcon, {\n          size: wp(5),\n          strokeWidth: 4,\n          color: \"black\"\n        }), _jsx(Text, {\n          style: {\n            marginLeft: 10,\n            fontSize: 16,\n            fontWeight: \"bold\"\n          },\n          children: \"Back\"\n        })]\n      })\n    }), _jsx(ScrollView, {\n      style: styles.messagesContainer,\n      children: receivedMessages.map(function (msg, index) {\n        return _jsx(Text, {\n          style: styles.messageText,\n          children: msg\n        }, index);\n      })\n    }), _jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsx(TextInput, {\n        style: styles.input,\n        value: message,\n        onChangeText: function onChangeText(text) {\n          return setMessage(text);\n        },\n        placeholder: \"Type a message...\"\n      }), _jsx(Button, {\n        title: \"Send\",\n        onPress: sendMessage\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: 20,\n    marginTop: 50\n  },\n  messagesContainer: {\n    marginBottom: 10,\n    width: \"100%\"\n  },\n  messageText: {\n    fontSize: 16,\n    marginBottom: 5\n  },\n  inputContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    width: \"100%\"\n  },\n  input: {\n    flex: 1,\n    height: 40,\n    borderWidth: 1,\n    borderColor: \"#ccc\",\n    borderRadius: 5,\n    paddingHorizontal: 10,\n    marginRight: 10\n  }\n});\nexport default GroupPage;\n_NativeWindStyleSheet.create({\n  styles: {\n    \"container\": {\n      \"width\": \"100%\"\n    },\n    \"container@0\": {\n      \"maxWidth\": 640\n    },\n    \"container@1\": {\n      \"maxWidth\": 768\n    },\n    \"container@2\": {\n      \"maxWidth\": 1024\n    },\n    \"container@3\": {\n      \"maxWidth\": 1280\n    },\n    \"container@4\": {\n      \"maxWidth\": 1536\n    },\n    \"flex\": {\n      \"display\": \"flex\"\n    },\n    \"rounded-2xl\": {\n      \"borderTopLeftRadius\": 16,\n      \"borderTopRightRadius\": 16,\n      \"borderBottomRightRadius\": 16,\n      \"borderBottomLeftRadius\": 16\n    },\n    \"bg-gray-200\": {\n      \"backgroundColor\": \"#e5e7eb\"\n    },\n    \"dark:bg-neutral-800\": {\n      \"backgroundColor\": \"#262626\"\n    }\n  },\n  atRules: {\n    \"container\": [[[\"media\", \"(min-width: 640px)\"]], [[\"media\", \"(min-width: 768px)\"]], [[\"media\", \"(min-width: 1024px)\"]], [[\"media\", \"(min-width: 1280px)\"]], [[\"media\", \"(min-width: 1536px)\"]]]\n  },\n  masks: {\n    \"dark:bg-neutral-800\": 1\n  },\n  topics: {\n    \"container\": [\"width\"],\n    \"dark:bg-neutral-800\": [\"colorScheme\"]\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","HubConnectionBuilder","View","TextInput","Button","StyleSheet","Text","ScrollView","TouchableOpacity","ChevronDoubleLeftIcon","widthPercentageToDP","wp","Chat_Url","KeyboardAvodingContainer","jsx","_jsx","jsxs","_jsxs","GroupPage","_ref","navigation","_useState","_useState2","_slicedToArray","connection","setConnection","_useState3","_useState4","message","setMessage","_useState5","_useState6","receivedMessages","setReceivedMessages","newConnection","withUrl","withAutomaticReconnect","build","start","then","console","log","catch","err","on","receivedMessage","prevMessages","concat","_toConsumableArray","sendMessage","_ref2","_asyncToGenerator","trim","send","apply","arguments","_StyledComponent","style","styles","container","className","component","children","onPress","goBack","padding","width","marginBottom","flexDirection","alignItems","size","strokeWidth","color","marginLeft","fontSize","fontWeight","messagesContainer","map","msg","index","messageText","inputContainer","input","value","onChangeText","text","placeholder","title","create","justifyContent","marginTop","flex","height","borderWidth","borderColor","borderRadius","paddingHorizontal","marginRight","_NativeWindStyleSheet","atRules","masks","topics"],"sources":["C:/Users/bhand/OneDrive/Desktop/Sahaj Yatri/Frontend/src/screens/ChatScreen/Chat/GroupPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { HubConnectionBuilder } from \"@microsoft/signalr\";\r\nimport {\r\n  View,\r\n  TextInput,\r\n  Button,\r\n  StyleSheet,\r\n  Text,\r\n  ScrollView,\r\n  TouchableOpacity,\r\n} from \"react-native\";\r\nimport { ChevronDoubleLeftIcon } from \"react-native-heroicons/outline\";\r\nimport { widthPercentageToDP as wp } from \"react-native-responsive-screen\";\r\nimport { Chat_Url } from \"../../utils/config\";\r\nimport KeyboardAvodingContainer from \"../../../components/KeyboardAvodingContainer\";\r\n\r\nconst GroupPage = ({ navigation }) => {\r\n  const [connection, setConnection] = useState(null);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [receivedMessages, setReceivedMessages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const newConnection = new HubConnectionBuilder()\r\n      .withUrl(`${Chat_Url}`)\r\n      .withAutomaticReconnect()\r\n      .build();\r\n\r\n    setConnection(newConnection);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (connection) {\r\n      connection\r\n        .start()\r\n        .then(() => console.log(\"SignalR Connected\"))\r\n        .catch((err) => console.log(\"SignalR Connection Error: \", err));\r\n\r\n      connection.on(\"ReceivedMessage\", (receivedMessage) => {\r\n        console.log(\"Received message:\", receivedMessage);\r\n        setReceivedMessages((prevMessages) => [\r\n          ...prevMessages,\r\n          receivedMessage,\r\n        ]);\r\n      });\r\n    }\r\n  }, [connection]);\r\n\r\n  const sendMessage = async () => {\r\n    if (message.trim() !== \"\") {\r\n      try {\r\n        await connection.send(\"SendMessage\", message);\r\n        setMessage(\"\");\r\n      } catch (err) {\r\n        console.log(\"Error sending message: \", err);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <KeyboardAvodingContainer\r\n      style={styles.container}\r\n      className=\"dark:bg-neutral-800 \"\r\n    >\r\n      <TouchableOpacity\r\n        className=\"bg-gray-200 rounded-2xl\"\r\n        onPress={() => navigation.goBack()}\r\n        style={{ padding: 20, width: 350, marginBottom: 15 }}\r\n      >\r\n        <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\r\n          <ChevronDoubleLeftIcon size={wp(5)} strokeWidth={4} color=\"black\" />\r\n          <Text style={{ marginLeft: 10, fontSize: 16, fontWeight: \"bold\" }}>\r\n            Back\r\n          </Text>\r\n        </View>\r\n      </TouchableOpacity>\r\n      <ScrollView style={styles.messagesContainer}>\r\n        {receivedMessages.map((msg, index) => (\r\n          <Text key={index} style={styles.messageText}>\r\n            {msg}\r\n          </Text>\r\n        ))}\r\n      </ScrollView>\r\n      <View style={styles.inputContainer}>\r\n        <TextInput\r\n          style={styles.input}\r\n          value={message}\r\n          onChangeText={(text) => setMessage(text)}\r\n          placeholder=\"Type a message...\"\r\n        />\r\n        <Button title=\"Send\" onPress={sendMessage} />\r\n      </View>\r\n    </KeyboardAvodingContainer>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    padding: 20,\r\n    marginTop: 50,\r\n  },\r\n  messagesContainer: {\r\n    marginBottom: 10,\r\n    width: \"100%\",\r\n  },\r\n  messageText: {\r\n    fontSize: 16,\r\n    marginBottom: 5,\r\n  },\r\n  inputContainer: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n  },\r\n  input: {\r\n    flex: 1,\r\n    height: 40,\r\n    borderWidth: 1,\r\n    borderColor: \"#ccc\",\r\n    borderRadius: 5,\r\n    paddingHorizontal: 10,\r\n    marginRight: 10,\r\n  },\r\n});\r\n\r\nexport default GroupPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}