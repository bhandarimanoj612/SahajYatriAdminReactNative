{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { NativeWindStyleSheet as _NativeWindStyleSheet } from \"nativewind\";\nimport { StyledComponent as _StyledComponent } from \"nativewind\";\nimport React, { useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport axios from \"axios\";\nimport { HubConnectionBuilder } from \"@microsoft/signalr\";\nimport randomImage from \"../../../../assets/images/Budget/randomImage\";\nimport { ChevronDoubleLeftIcon } from \"react-native-heroicons/outline\";\nimport { widthPercentageToDP as wp } from \"react-native-responsive-screen\";\nimport { Chat_Url } from \"../../utils/config\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Friend = function Friend(_ref) {\n  var navigation = _ref.navigation,\n    route = _ref.route;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    onlineUsers = _useState2[0],\n    setOnlineUsers = _useState2[1];\n  useEffect(function () {\n    var hubConnection = new HubConnectionBuilder().withUrl(`${Chat_Url}`).withAutomaticReconnect().build();\n    hubConnection.start().then(function () {\n      console.log(\"SignalR Connected!\");\n    }).catch(function (error) {\n      console.error(\"Error starting SignalR connection:\", error);\n    });\n    hubConnection.on(\"OnlineUsers\", function (users) {\n      console.log(\"Received online users:\", users);\n      setOnlineUsers(users);\n    });\n    return function () {\n      hubConnection.off(\"OnlineUsers\");\n      hubConnection.stop();\n    };\n  }, []);\n  var handleStartChat = function handleStartChat(recipient) {\n    navigation.navigate(\"ChatScreen\", {\n      sender: route.params.name,\n      recipient: recipient\n    });\n  };\n  return _jsxs(SafeAreaView, {\n    children: [_jsx(StatusBar, {\n      barStyle: \"black\"\n    }), _jsxs(_StyledComponent, {\n      style: styles.container,\n      className: \"dark:bg-neutral-900\",\n      component: View,\n      children: [_jsx(_StyledComponent, {\n        className: \"bg-gray-200 rounded-xl dark:bg-neutral-800\",\n        onPress: function onPress() {\n          return navigation.goBack();\n        },\n        style: {\n          padding: 5\n        },\n        component: TouchableOpacity,\n        children: _jsx(View, {\n          style: {\n            flexDirection: \"row\",\n            alignItems: \"center\"\n          },\n          children: _jsx(ChevronDoubleLeftIcon, {\n            size: wp(6),\n            strokeWidth: 4,\n            color: \"black\"\n          })\n        })\n      }), _jsx(_StyledComponent, {\n        className: \"font-bold text-2xl m-4 text-[#2B3384] \",\n        component: Text,\n        children: \"Friends\"\n      }), _jsx(FlatList, {\n        data: onlineUsers,\n        keyExtractor: function keyExtractor(item) {\n          return item;\n        },\n        showsVerticalScrollIndicator: false,\n        renderItem: function renderItem(_ref2) {\n          var item = _ref2.item;\n          return _jsxs(_StyledComponent, {\n            onPress: function onPress() {\n              return handleStartChat(item);\n            },\n            className: \"bg-white rounded-2xl m-3 items-center dark:bg-neutral-800\",\n            component: TouchableOpacity,\n            children: [_jsx(Image, {\n              source: randomImage(),\n              style: styles.avatar\n            }), _jsx(_StyledComponent, {\n              style: [styles.friendName, item === route.params.name && styles.youText],\n              className: \"font-Bold text-green-700\",\n              component: Text,\n              children: item === route.params.name ? \"You\" : item\n            })]\n          });\n        }\n      }), _jsx(_StyledComponent, {\n        className: \"rounded-2xl bg-[#2B3384] items-center\",\n        onPress: function onPress() {\n          return navigation.navigate(\"GroupPage\");\n        },\n        component: TouchableOpacity,\n        children: _jsx(_StyledComponent, {\n          className: \"text-white p-5 font-bold  text-xl\",\n          component: Text,\n          children: \"Gobal Chat\"\n        })\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    height: 795\n  },\n  avatar: {\n    width: 100,\n    height: 50,\n    borderRadius: 40,\n    marginBottom: 5\n  },\n  friendName: {\n    fontSize: 15,\n    textAlign: \"center\"\n  },\n  youText: {\n    color: \"blue\"\n  }\n});\nexport default Friend;\n_NativeWindStyleSheet.create({\n  styles: {\n    \"container\": {\n      \"width\": \"100%\"\n    },\n    \"container@0\": {\n      \"maxWidth\": 640\n    },\n    \"container@1\": {\n      \"maxWidth\": 768\n    },\n    \"container@2\": {\n      \"maxWidth\": 1024\n    },\n    \"container@3\": {\n      \"maxWidth\": 1280\n    },\n    \"container@4\": {\n      \"maxWidth\": 1536\n    },\n    \"m-3\": {\n      \"marginTop\": 12,\n      \"marginRight\": 12,\n      \"marginBottom\": 12,\n      \"marginLeft\": 12\n    },\n    \"m-4\": {\n      \"marginTop\": 16,\n      \"marginRight\": 16,\n      \"marginBottom\": 16,\n      \"marginLeft\": 16\n    },\n    \"items-center\": {\n      \"alignItems\": \"center\"\n    },\n    \"rounded-2xl\": {\n      \"borderTopLeftRadius\": 16,\n      \"borderTopRightRadius\": 16,\n      \"borderBottomRightRadius\": 16,\n      \"borderBottomLeftRadius\": 16\n    },\n    \"rounded-xl\": {\n      \"borderTopLeftRadius\": 12,\n      \"borderTopRightRadius\": 12,\n      \"borderBottomRightRadius\": 12,\n      \"borderBottomLeftRadius\": 12\n    },\n    \"bg-[#2B3384]\": {\n      \"backgroundColor\": \"#2B3384\"\n    },\n    \"bg-gray-200\": {\n      \"backgroundColor\": \"#e5e7eb\"\n    },\n    \"bg-red-400\": {\n      \"backgroundColor\": \"#f87171\"\n    },\n    \"bg-white\": {\n      \"backgroundColor\": \"#fff\"\n    },\n    \"p-5\": {\n      \"paddingTop\": 20,\n      \"paddingRight\": 20,\n      \"paddingBottom\": 20,\n      \"paddingLeft\": 20\n    },\n    \"font-bold\": {\n      \"fontWeight\": \"700\"\n    },\n    \"text-[#2B3384]\": {\n      \"color\": \"#2B3384\"\n    },\n    \"text-green-700\": {\n      \"color\": \"#15803d\"\n    },\n    \"text-white\": {\n      \"color\": \"#fff\"\n    },\n    \"text-2xl\": {\n      \"fontSize\": 24,\n      \"lineHeight\": 32\n    },\n    \"text-xl\": {\n      \"fontSize\": 20,\n      \"lineHeight\": 28\n    },\n    \"dark:bg-neutral-800\": {\n      \"backgroundColor\": \"#262626\"\n    },\n    \"dark:bg-neutral-900\": {\n      \"backgroundColor\": \"#171717\"\n    }\n  },\n  atRules: {\n    \"container\": [[[\"media\", \"(min-width: 640px)\"]], [[\"media\", \"(min-width: 768px)\"]], [[\"media\", \"(min-width: 1024px)\"]], [[\"media\", \"(min-width: 1280px)\"]], [[\"media\", \"(min-width: 1536px)\"]]]\n  },\n  masks: {\n    \"dark:bg-neutral-800\": 1,\n    \"dark:bg-neutral-900\": 1\n  },\n  topics: {\n    \"container\": [\"width\"],\n    \"dark:bg-neutral-800\": [\"colorScheme\"],\n    \"dark:bg-neutral-900\": [\"colorScheme\"]\n  }\n});","map":{"version":3,"names":["React","useEffect","useState","View","Text","FlatList","StyleSheet","TouchableOpacity","Image","SafeAreaView","axios","HubConnectionBuilder","randomImage","ChevronDoubleLeftIcon","widthPercentageToDP","wp","Chat_Url","StatusBar","jsx","_jsx","jsxs","_jsxs","Friend","_ref","navigation","route","_useState","_useState2","_slicedToArray","onlineUsers","setOnlineUsers","hubConnection","withUrl","withAutomaticReconnect","build","start","then","console","log","catch","error","on","users","off","stop","handleStartChat","recipient","navigate","sender","params","name","children","barStyle","_StyledComponent","style","styles","container","className","component","onPress","goBack","padding","flexDirection","alignItems","size","strokeWidth","color","data","keyExtractor","item","showsVerticalScrollIndicator","renderItem","_ref2","source","avatar","friendName","youText","create","height","width","borderRadius","marginBottom","fontSize","textAlign","_NativeWindStyleSheet","atRules","masks","topics"],"sources":["C:/Users/bhand/OneDrive/Desktop/Sahaj Yatri/Frontend/src/screens/ChatScreen/Chat/Friend.jsx"],"sourcesContent":["// FriendsScreen.js\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  FlatList,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  Image,\r\n  SafeAreaView,\r\n} from \"react-native\";\r\nimport axios from \"axios\";\r\nimport { HubConnectionBuilder } from \"@microsoft/signalr\";\r\nimport randomImage from \"../../../../assets/images/Budget/randomImage\";\r\nimport { ChevronDoubleLeftIcon } from \"react-native-heroicons/outline\";\r\nimport { widthPercentageToDP as wp } from \"react-native-responsive-screen\";\r\nimport { Chat_Url } from \"../../utils/config\";\r\nimport { StatusBar } from \"expo-status-bar\";\r\nconst Friend = ({ navigation, route }) => {\r\n  const [onlineUsers, setOnlineUsers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Connect to SignalR hub\r\n    const hubConnection = new HubConnectionBuilder()\r\n      .withUrl(`${Chat_Url}`)\r\n      .withAutomaticReconnect()\r\n      .build();\r\n\r\n    hubConnection\r\n      .start()\r\n      .then(() => {\r\n        console.log(\"SignalR Connected!\");\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error starting SignalR connection:\", error);\r\n      });\r\n\r\n    hubConnection.on(\"OnlineUsers\", (users) => {\r\n      console.log(\"Received online users:\", users); // Log received online users\r\n      setOnlineUsers(users);\r\n    });\r\n\r\n    return () => {\r\n      hubConnection.off(\"OnlineUsers\");\r\n      hubConnection.stop();\r\n    };\r\n  }, []);\r\n\r\n  const handleStartChat = (recipient) => {\r\n    // navigation.navigate(\"PrivateMessage\", {\r\n    navigation.navigate(\"ChatScreen\", {\r\n      sender: route.params.name,\r\n      recipient,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView>\r\n      <StatusBar barStyle=\"black\" />\r\n      <View style={styles.container} className=\"dark:bg-neutral-900\">\r\n        <TouchableOpacity\r\n          className=\"bg-gray-200 rounded-xl dark:bg-neutral-800\"\r\n          onPress={() => navigation.goBack()}\r\n          style={{ padding: 5 }}\r\n        >\r\n          <View style={{ flexDirection: \"row\", alignItems: \"center\" }}>\r\n            <ChevronDoubleLeftIcon size={wp(6)} strokeWidth={4} color=\"black\" />\r\n          </View>\r\n        </TouchableOpacity>\r\n        <Text className=\"font-bold text-2xl m-4 text-[#2B3384] \">Friends</Text>\r\n\r\n        <FlatList\r\n          data={onlineUsers}\r\n          keyExtractor={(item) => item}\r\n          showsVerticalScrollIndicator={false}\r\n          renderItem={({ item }) => (\r\n            <TouchableOpacity\r\n              onPress={() => handleStartChat(item)}\r\n              className=\"bg-white rounded-2xl m-3 items-center dark:bg-neutral-800\"\r\n            >\r\n              <Image\r\n                source={randomImage()} // Use the randomImage function to get a random image\r\n                style={styles.avatar} // Adjust the dimensions as needed\r\n              />\r\n              <Text\r\n                style={[\r\n                  styles.friendName,\r\n                  item === route.params.name && styles.youText, // Apply different styles for \"You\"\r\n                ]}\r\n                className=\"font-Bold text-green-700\"\r\n              >\r\n                {item === route.params.name ? \"You\" : item}\r\n              </Text>\r\n              {/* <Text className=\"bg-red-400\">\"hi\"</Text> */}\r\n            </TouchableOpacity>\r\n          )}\r\n        />\r\n        <TouchableOpacity\r\n          className=\"rounded-2xl bg-[#2B3384] items-center\"\r\n          onPress={() => navigation.navigate(\"GroupPage\")}\r\n        >\r\n          <Text className=\"text-white p-5 font-bold  text-xl\">Gobal Chat</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    // borderColor: \"#D8D5D5\",\r\n    // borderWidth: 1,\r\n    // shadowColor: \"black\",\r\n    // shadowRadius: 1,\r\n    // shadowOpacity: 1,\r\n    // overflow: \"visible\",\r\n    // shadowOffset: { width: 1, height: 1 },\r\n    // marginBottom: 50,\r\n    height: 795,\r\n  },\r\n  avatar: {\r\n    width: 100,\r\n    height: 50,\r\n    borderRadius: 40,\r\n    marginBottom: 5,\r\n  },\r\n  friendName: {\r\n    fontSize: 15,\r\n\r\n    textAlign: \"center\",\r\n  },\r\n  youText: {\r\n    color: \"blue\", // Change color as needed\r\n    // Add more styles if required\r\n  },\r\n});\r\n\r\nexport default Friend;\r\n"],"mappings":"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},"metadata":{},"sourceType":"module","externalDependencies":[]}